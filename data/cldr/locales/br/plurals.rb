{ :br => { :i18n => { :plural => { :keys => [:one, :two, :few, :many, :other], :rule => lambda { |n| n = n.respond_to?(:abs) ? n.abs : ((m = n.to_s)[0] == "-" ? m[1,m.length] : m); (n.to_f % 10 == 1 && ![11, 71, 91].include?(n.to_f % 100)) ? :one : (n.to_f % 10 == 2 && ![12, 72, 92].include?(n.to_f % 100)) ? :two : (((n.to_f % 10) == 9 || (((n.to_f % 10) % 1).zero? && (3..4).include?(n.to_f % 10))) && ((((n.to_f % 100) % 1).zero? && (!(10..19).include?(n.to_f % 100) || !(70..79).include?(n.to_f % 100) || !(90..99).include?(n.to_f % 100))))) ? :few : (n.to_f != 0 && n.to_f % 1000000 == 0) ? :many : :other } } } } }