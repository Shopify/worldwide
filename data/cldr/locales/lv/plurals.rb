{ :lv => { :i18n => { :plural => { :keys => [:zero, :one, :other], :rule => lambda { |n| n = n.respond_to?(:abs) ? n.abs : ((m = n.to_s)[0] == "-" ? m[1,m.length] : m); (n.to_f % 10 == 0 || (((n.to_f % 100) % 1).zero? && (11..19).include?(n.to_f % 100)) || (((v = n.to_s.split(".")[1]) ? v.length : 0) == 2 && (11..19).include?(((f = n.to_s.split(".")[1]) ? f.to_i : 0) % 100))) ? :zero : ((n.to_f % 10 == 1 && n.to_f % 100 != 11) || (((v = n.to_s.split(".")[1]) ? v.length : 0) == 2 && ((f = n.to_s.split(".")[1]) ? f.to_i : 0) % 10 == 1 && ((f = n.to_s.split(".")[1]) ? f.to_i : 0) % 100 != 11) || (((v = n.to_s.split(".")[1]) ? v.length : 0) != 2 && ((f = n.to_s.split(".")[1]) ? f.to_i : 0) % 10 == 1)) ? :one : :other } } } } }