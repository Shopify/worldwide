{ :be => { :i18n => { :plural => { :keys => [:one, :few, :many, :other], :rule => lambda { |n| n = n.respond_to?(:abs) ? n.abs : ((m = n.to_s)[0] == "-" ? m[1,m.length] : m); (n.to_f % 10 == 1 && n.to_f % 100 != 11) ? :one : ((((n.to_f % 10) % 1).zero? && (2..4).include?(n.to_f % 10)) && (((n.to_f % 100) % 1).zero? && !(12..14).include?(n.to_f % 100))) ? :few : (n.to_f % 10 == 0 || (((n.to_f % 10) % 1).zero? && (5..9).include?(n.to_f % 10)) || (((n.to_f % 100) % 1).zero? && (11..14).include?(n.to_f % 100))) ? :many : :other } } } } }